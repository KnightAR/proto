syntax = "proto3";

package helium.config;

import "region.proto";

message org_v1 {
  uint64 oui = 1;
  bytes owner = 2;
  bytes payer = 3;
  uint32 nonce = 4;
}

message devaddr_range_v1 {
  uint64 start_addr = 1;
  uint64 end_addr = 2;
}

message eui_v1 {
  uint64 app_eui = 1;
  uint64 dev_eui = 2;
}

message protocol_packet_router_v1 {}

message protocol_gwmp_mapping_v1 {
  region region = 1;
  uint32 port = 2;
}

message protocol_gwmp_v1 { repeated protocol_gwmp_mapping_v1 mapping = 1; }

message protocol_http_roaming_v1 {}

message server_v1 {
  bytes host = 1;
  uint32 port = 2;
  oneof protocol {
    protocol_packet_router_v1 packet_router = 3;
    protocol_gwmp_v1 gwmp = 4;
    protocol_http_roaming_v1 http_roaming = 5;
  }
}

message route_v1 {
  bytes id = 1;
  uint64 net_id = 2;
  repeated devaddr_range_v1 devaddr_ranges = 3;
  repeated eui_v1 euis = 4;
  uint64 oui = 5;
  server_v1 server = 6;
  uint32 max_copies = 7;
  uint32 nonce = 8;
}

message org_list_req_v1 {}

message org_list_res_v1 { repeated org_v1 orgs = 1; }

message org_get_req_v1 { uint64 oui = 1; }

message org_create_req_v1 {
  org_v1 org = 1;
  uint64 timestamp = 2; // in ms
  bytes signature = 3;
}

message route_list_req_v1 {
  uint64 oui = 1;
  bytes owner = 2;
  uint64 timestamp = 3; // in ms
  bytes signature = 4;
}

message route_list_res_v1 { repeated route_v1 routes = 1; }

message route_get_req_v1 {
  bytes id = 1;
  bytes owner = 2;
  uint64 timestamp = 3; // in ms
  bytes signature = 4;
}

message route_create_req_v1 {
  uint64 oui = 1;
  route_v1 route = 2;
  bytes owner = 3;
  uint64 timestamp = 4; // in ms
  bytes signature = 5;
}

message route_update_req_v1 {
  route_v1 route = 1;
  bytes owner = 2;
  uint64 timestamp = 3; // in ms
  bytes signature = 4;
}

message route_delete_req_v1 {
  bytes id = 1;
  bytes owner = 2;
  uint64 timestamp = 3; // in ms
  bytes signature = 4;
}

message route_stream_req_v1 {
  bytes pub_key = 1;
  uint64 timestamp = 2; // in ms
  bytes signature = 3;
}

message route_stream_res_v1 {
  enum action {
    create = 0;
    update = 1;
    delete = 2;
  }
  action action = 1;
  route_v1 route = 2;
}

service org {
  rpc list(org_list_req_v1) returns (org_list_res_v1);
  rpc get(org_get_req_v1) returns (org_v1);
  rpc create(org_create_req_v1) returns (org_v1);
}

service route {
  rpc list(route_list_req_v1) returns (route_list_res_v1);
  rpc get(route_get_req_v1) returns (route_v1);
  rpc create(route_create_req_v1) returns (route_v1);
  rpc update(route_update_req_v1) returns (route_v1);
  rpc delete (route_delete_req_v1) returns (route_v1);
  rpc stream(route_stream_req_v1) returns (stream route_stream_res_v1);
}