syntax = "proto3";

package helium.packet_router;

import "region.proto";

message packet_router_route_devaddr_range_v1 {
  uint64 start = 1;
  uint64 end = 2;
}

message packet_router_route_eui_v1 {
  uint64 app_eui = 1;
  uint64 dev_eui = 2;
}

enum packet_router_route_protocol_v1 {
  gwmp = 0;
  http = 1;
  router = 2;
}

message packet_router_route_v1 {
  uint64 net_id = 1;
  repeated packet_router_route_devaddr_range_v1 devaddr_ranges = 2;
  repeated packet_router_route_eui_v1 euis = 3;
  bytes lns = 4;
  packet_router_route_protocol_v1 protocol = 5;
  uint64 oui = 6;
}

message packet_router_routes_req_v1 {}

message packet_router_routes_res_v1 {
  repeated packet_router_route_v1 routes = 1;
}

message packet_router_packet_up_v1 {
  bytes payload = 1;
  uint64 timestamp = 2;
  float signal_strength = 3;
  float frequency = 4;
  string datarate = 5;
  float snr = 6;
  region region = 7;
  uint64 hold_time = 8;
  bytes hotspot = 9;
  bytes signature = 10;
}

message window_v1 {
  uint64 timestamp = 1;
  float frequency = 2;
  string datarate = 3;
}

message packet_router_packet_down_v1 {
  bytes payload = 1;
  window_v1 rx1 = 2;
  window_v1 rx2 = 3;
}

service packet_router {
  rpc packets(stream packet_router_packet_up_v1)
      returns (stream packet_router_packet_down_v1);
}

service config {
  rpc routes(packet_router_routes_req_v1)
      returns (stream packet_router_routes_res_v1);
}